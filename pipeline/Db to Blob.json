{
	"name": "Db to Blob",
	"properties": {
		"activities": [
			{
				"name": "Loop through control_table",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select * from dbo.control_table \nwhere sourcetype='table' and desttype='file'",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "controltableds",
						"type": "DatasetReference",
						"parameters": {
							"servername": "azure-training-sqlserver.database.windows.net",
							"databasename": "demo",
							"username": "training",
							"secretname": "sqlserver1"
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Loop through each item in the control_table",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Loop through control_table",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Loop through control_table').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Copy data from sqldb table to file",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "select * from @{item().SRC_TB}\nwhere @{item().watermark_col}>'@{item().watermark_value}'",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings",
										"copyBehavior": "PreserveHierarchy"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"enableSkipIncompatibleRow": true,
								"logSettings": {
									"enableCopyActivityLog": true,
									"copyActivityLogSettings": {
										"logLevel": "Warning",
										"enableReliableLogging": false
									},
									"logLocationSettings": {
										"linkedServiceName": {
											"referenceName": "akshayasa_ls",
											"type": "LinkedServiceReference"
										},
										"path": "files/warning1"
									}
								},
								"translator": {
									"value": "@json(item().MAPPINGS)",
									"type": "Expression"
								}
							},
							"inputs": [
								{
									"referenceName": "sqldatads",
									"type": "DatasetReference",
									"parameters": {
										"servername": {
											"value": "@item().SRC_SERVER",
											"type": "Expression"
										},
										"username": {
											"value": "@item().USERNAME",
											"type": "Expression"
										},
										"schemaname": {
											"value": "@item().SRC_SCHEMA",
											"type": "Expression"
										},
										"databasename": {
											"value": "@item().SRC_DB",
											"type": "Expression"
										},
										"secretname": {
											"value": "@item().SECRETNAME",
											"type": "Expression"
										},
										"tablename": {
											"value": "@item().SRC_TB",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "blobds",
									"type": "DatasetReference",
									"parameters": {
										"filename": {
											"value": "@concat('year=',utcnow('yyyy'),'/month=',utcnow('MM'),'/day=',utcnow('dd'),'/',item().DES_TB,'_',utcnow(),'.csv')",
											"type": "Expression"
										},
										"foldername": {
											"value": "@item().DES_SERVER",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Updating control_table watermark column",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Get the lastmodified time from src table",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[UPDATE_CONTROL_TABLE]",
								"storedProcedureParameters": {
									"TABLENAME": {
										"value": {
											"value": "@item().SRC_TB",
											"type": "Expression"
										},
										"type": "String"
									},
									"LastModifiedTime": {
										"value": {
											"value": "@activity('Get the lastmodified time from src table').output.firstRow.LastModifiedTime",
											"type": "Expression"
										},
										"type": "Datetime"
									},
									"Taskname": {
										"value": {
											"value": "@item().TASKNAME",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "AzureSqlDatabase",
								"type": "LinkedServiceReference",
								"parameters": {
									"servername": "azure-training-sqlserver.database.windows.net",
									"databasename": "demo",
									"secretname": "sqlserver1",
									"Username": "training"
								}
							}
						},
						{
							"name": "Get the lastmodified time from src table",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "Copy data from sqldb table to file",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "select max(@{item().WATERMARK_COL}) as LastModifiedTime from @{item().SRC_TB}\n",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "sqldatads",
									"type": "DatasetReference",
									"parameters": {
										"servername": {
											"value": "@item().SRC_SERVER",
											"type": "Expression"
										},
										"username": {
											"value": "@item().USERNAME",
											"type": "Expression"
										},
										"schemaname": {
											"value": "@item().SRC_SCHEMA",
											"type": "Expression"
										},
										"databasename": {
											"value": "@item().SRC_DB",
											"type": "Expression"
										},
										"secretname": {
											"value": "@item().SECRETNAME",
											"type": "Expression"
										},
										"tablename": {
											"value": "@item().SRC_TB",
											"type": "Expression"
										}
									}
								},
								"firstRowOnly": true
							}
						}
					]
				}
			},
			{
				"name": "Send Email on failure",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Loop through each item in the control_table",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": "https://prod-20.centralindia.logic.azure.com:443/workflows/e3adea16cbcb4721b63d93037ca154ec/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=WwY1QEGOgVeJS7cu5AALEuhK-xHUd6es5Q0Jmepy9xc",
					"method": "POST",
					"headers": {
						"Content-type": "application/json"
					},
					"body": {
						"value": "{\n    \"PipelineName\":@{pipeline().Pipeline},\n    \"ErrorMessage\":@{activity('Copy data from sqldb table to file').Error.Message},\n    \"DataFactoryName\":@{pipeline().DataFactory},\n    \"PipelineRundId\":@{pipeline().RunId}\n}",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Send email when not able to fetch from control_table",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Loop through control_table",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": "https://prod-20.centralindia.logic.azure.com:443/workflows/e3adea16cbcb4721b63d93037ca154ec/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=WwY1QEGOgVeJS7cu5AALEuhK-xHUd6es5Q0Jmepy9xc",
					"method": "POST",
					"headers": {
						"Content-type": "application/json"
					},
					"body": {
						"value": "{\n    \"PipelineName\":@{pipeline().Pipeline},\n    \"ErrorMessage\":@{activity('Loop through control_table').Error.Message},\n    \"DataFactoryName\":@{pipeline().DataFactory},\n    \"PipelineRundId\":@{pipeline().RunId}\n}",
						"type": "Expression"
					}
				}
			}
		],
		"annotations": []
	}
}