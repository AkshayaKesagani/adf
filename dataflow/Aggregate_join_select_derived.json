{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "files",
						"type": "DatasetReference"
					},
					"name": "employee"
				},
				{
					"dataset": {
						"referenceName": "files",
						"type": "DatasetReference"
					},
					"name": "department"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "files",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "depwisegroup"
				},
				{
					"name": "join1"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          EmployeeID as short,",
				"          FirstName as string,",
				"          LastName as string,",
				"          DepartmentId as short",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> employee",
				"source(output(",
				"          DepartmentId as short,",
				"          DepName as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> department",
				"employee aggregate(groupBy(Department = toString(byName('DepartmentId'),'employee')),",
				"     Count = count(toString(byName('EmployeeID')))) ~> depwisegroup",
				"depwisegroup, department join(Department == toString(byName('DepartmentId', 'department')),",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 select(mapColumn(",
				"          Department,",
				"          DepName,",
				"          Count",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['DepwiseGroup.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          Department,",
				"          DepName,",
				"          Count",
				"     ),",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}