{
	"name": "Union",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "files",
						"type": "DatasetReference"
					},
					"name": "HREmployees"
				},
				{
					"dataset": {
						"referenceName": "files",
						"type": "DatasetReference"
					},
					"name": "ITEmployees"
				},
				{
					"dataset": {
						"referenceName": "files",
						"type": "DatasetReference"
					},
					"name": "FinanceEmployees"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "files",
						"type": "DatasetReference"
					},
					"name": "CombinedData"
				}
			],
			"transformations": [
				{
					"name": "union1"
				},
				{
					"name": "exists1"
				}
			],
			"scriptLines": [
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> HREmployees",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> ITEmployees",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> FinanceEmployees",
				"HREmployees, ITEmployees, FinanceEmployees union(byName: false)~> union1",
				"FinanceEmployees exists(ERROR_FUNCTION('') == ERROR_FUNCTION(''),",
				"     negate:false,",
				"     broadcast: 'auto')~> exists1",
				"union1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['CombinedEmployees.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> CombinedData"
			]
		}
	}
}